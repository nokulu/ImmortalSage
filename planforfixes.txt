# Plan to Fix QiCapability.java

## Current Issues
1. QiStorage class not implementing required abstract methods
2. Method signature mismatches in serializeNBT and deserializeNBT
3. Missing getQiAmount method in QiManager
4. Redundant and unused imports
5. ResourceLocation constructor visibility issue

## Detailed Fix Plan

### 1. Fix QiStorage Implementation
- Update the QiStorage class to implement the new INBTSerializable interface methods:
```java
serializeNBT(HolderLookup.Provider provider)
deserializeNBT(HolderLookup.Provider provider, CompoundTag nbt)
```
- Consider using a structured data format or a Data Transfer Object (DTO) to encapsulate related values for easier serialization/deserialization.
- Ensure proper error handling for null providers and unexpected data formats.
- Review existing serialization logic for improvements.

### 2. Fix ResourceLocation Creation
- Keep the following line as is:
```java
ResourceLocation.fromNamespaceAndPath("sagecraft", "qi_manager")
```

### 3. QiManager Updates
- Add required methods to QiManager class:
  * getQiAmount()
  * getCurrentPath()
  * getRealmLevel()
  * setQiAmount()
  * setCurrentPath()
  * setRealmLevel()
  * isMeditating()
  * gainQi()

### 4. Clean Up Imports
Remove unused imports:
- com.example.sagecraft.QiManager
- com.example.sagecraft.RealmDisplayManager
- com.example.sagecraft.QiData
- net.minecraft.core.*
- net.minecraft.core.HolderLookup.Provider (keep this one)

### 5. Testing Plan
1. Test QiStorage serialization/deserialization
   - Create a new QiStorage instance
   - Set various values
   - Serialize to NBT
   - Deserialize back
   - Verify values match

2. Test Capability Attachment
   - Create a new player
   - Verify QiManager capability is attached
   - Verify can get/set values

3. Test Meditation System
   - Start meditation
   - Verify Qi increases over time
   - Stop meditation
   - Verify Qi stops increasing

## Dependencies to Update
1. QiManager.java
   - Add missing methods
   - Ensure proper implementation of Qi management

2. RealmDisplayManager.java
   - Update to work with new QiManager methods
   - Ensure proper realm level display

## Implementation Order
1. Clean up imports first
2. Fix ResourceLocation creation
3. Update QiStorage class with new interface methods
4. Implement missing QiManager methods
5. Test each component
6. Update dependent classes

## Notes
- All changes should maintain backward compatibility where possible
- Document any breaking changes
- Add proper error handling for edge cases
- Add JavaDoc comments for new methods
- Consider adding debug logging for troubleshooting

## Potential Risks
- Breaking changes in capability system
- Data loss during serialization/deserialization
- Performance impact of new provider parameter
- Compatibility issues with other mods

## Follow-up Tasks
- Update documentation
- Create unit tests for new functionality
- Review error handling
- Performance testing
- Update mod version number
